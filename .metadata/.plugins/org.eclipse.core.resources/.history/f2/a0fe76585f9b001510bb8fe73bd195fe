package eak;

import javax.annotation.Resource;
import javax.ejb.*;
import javax.inject.Inject;
import javax.jms.*;

@JMSConnectionFactoryDefinition(
		name="java:global/jms/StatisticsConnectionFactory",
		interfaceName="javax.jms.ConnectionFactory",
		clientId="jmsweb"
	)
	//Define a JMS destination for this application.
	@JMSDestinationDefinition(
		name="java:global/jms/CoordinateStatisticsTopic",
		interfaceName="javax.jms.Topic",
		destinationName="CoordinateStatisticsTopic"
	)
/**
 * Message-Driven Bean implementation class for: UpdateStatisticsReceiverBean
 */
@MessageDriven(
		activationConfig = { @ActivationConfigProperty(
				propertyName = "destination", propertyValue = "CoordinateStatisticsTopic"), 
				@ActivationConfigProperty(
				propertyName = "destinationType", propertyValue = "javax.jms.Topic"),
		        @ActivationConfigProperty(propertyName  = "connectionFactoryJndiName",
                propertyValue = "java:global/jms/StatisticsConnectionFactory"), // External JNDI Name
		}, 
		mappedName = "CoordinateStatisticsTopic", 
		messageListenerInterface = MessageListener.class)
public class UpdateStatisticsReceiverBean implements MessageListener {

	@EJB(lookup="CoordinateStatisticsBean")
	UpdateStatistics cstat;
	
	// Use the connection factory defined above.
	@Inject
	@JMSConnectionFactory(value="java:global/jms/StatisticsConnectionFactory")
	private JMSContext context;
	
	// The message destination is a custom message topic. 
	@Resource(lookup="java:global/jms/CoordinateStatisticsTopic")
	private Topic destination;

    /**
     * Default constructor. 
     */
    public UpdateStatisticsReceiverBean() {}
	
	/**
     * @see MessageListener#onMessage(Message)
     */
    public void onMessage(Message message) {
        // Create a MessageConsumer 
        JMSConsumer consumer = context.createConsumer(destination);

        // Wait for a message
        StreamMessage ms = (StreamMessage) message;

    }

}
